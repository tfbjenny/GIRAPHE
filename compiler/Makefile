# OBJS = parser.cmo scanner.cmo semant.cmo

default: circline.native

.PHONY : circline.native

circline.native :
	ocamlbuild -use-ocamlfind -pkgs llvm,llvm.analysis,llvm.linker,llvm.bitreader,llvm.irreader -cflags -w,+a-4 \
		circline.native;
	clang -emit-llvm -o utils.bc -c lib/utils.c -Wno-varargs

OBJS = organizer.cmx cast.cmx ast.cmx codegen.cmx parser.cmx scanner.cmx semant.cmx circline.cmx parserize.cmx

circline: $(OBJS)
	ocamlfind ocamlopt -linkpkg -package llvm -package llvm.analysis $(OBJS) -o circline

all:
	cd ..; make all

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

%.cmo : %.ml
	ocamlc -c $<

%.cmi : %.mli
	ocamlc -c $<

%.cmx : %.ml
	ocamlfind ocamlopt -c -package llvm $<

.PHONY : clean
clean :
	ocamlbuild -clean
	rm -f utils.bc
	rm -f *.cmx *.cmi *.cmo *.cmx *.o
	rm -f circline parser.ml parser.mli scanner.ml *.cmo *.cmi

### Generated by "ocamldep *.ml *.mli" after building scanner.ml and parser.ml
ast.cmo :
ast.cmx :
cast.cmo : ast.cmo
cast.cmx : ast.cmx
codegen.cmo : cast.cmo
codegen.cmx : cast.cmx
circline.cmo : semant.cmo scanner.cmo parser.cmi codegen.cmo ast.cmo
circline.cmx : semant.cmx scanner.cmx parser.cmx codegen.cmx ast.cmx
parser.cmo : ast.cmo parser.cmi
parser.cmx : ast.cmx parser.cmi
scanner.cmo : parser.cmi
scanner.cmx : parser.cmx
semant.cmo : ast.cmo
semant.cmx : ast.cmx
parser.cmi : ast.cmo
parserize.cmx : ast.cmo
