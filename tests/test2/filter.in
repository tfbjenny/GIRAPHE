node a = node("a");
node b = node("b");
node c = node("c");
node d = node("d");
node e = node("e");
node f = node("f");
node g = node("g");

graph gh = a -> 1$b ->1$e -> 4$g ->1$b + a -> 1$b ->1$e ->2$c + a -> 5$c -> 1$g +a -> 5$c -> 1$f->1$c + a -> 3$d->2$c +a -> 3$d -> 3$f;
list<node> path = [a];
node cur = a;
int curVal = 0;
print("1 : restaurant");
print("2 : caffe");
print("3 : grocery shop");
print("4 : park");
print("5 : supermarket");
print("6 : library");

hashmap<int> hmap = { a : 2, b : 1, c : 1, d : 3, e : 4, f : 5, g : 6 };

void filter(node sour, int target) {
    print("--------- find target type ------------");
    print(target);
    list<node> nodes = gh.getAllNodes();
    int size = nodes.size();
    int i = 0;
    while (i < size) {
        cur = nodes.get(i);
        curVal = hmap.get(cur);
        if (curVal == target) {
            print("");
            print("--------- found target ------------");
            print(cur);
            path = gh.dijkstra(sour, cur);
            print(path);
            print("-----------------------------------");
            print("");
        }
        i = i + 1;
    }
}
filter(a, 1);

