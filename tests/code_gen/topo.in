node a = node("COMS 1004: Introduction to Computer Science and Programming in Java"); 
node b = node("COMS 4111: Introduction to Databases"); 
node c = node("COMS 6111: Advanced Database Systems"); 
node d = node("CSEE 4119: Computer Networks");
node e = node("CSEE 4140: Networking Laboratory");
node f = node("COMS 4118: Operating Systems");
node g = node("COMS 3101: Programming Language Python");
node h = node("CSOR 4231: Analysis of Algorithms I");
node i1 = node("COMS 6232: Analysis of Algorithms II");
node j = node("COMS 4771: Machine Learning");
node k = node("COMS 4772: Advanced Machine Learning");
node l = node("COMS 4995: Deep Learning for Computer Vision");

graph ga = a -> b -> f + b -> c + a -> d -> f + d -> e + h -> f + g -> h -> j -> l + h -> i1 + j -> k;

int i=0;
list<node> n = ga.getAllNodes();
list<node> tmp = n;
list<node> res = n;
int stmp = 0;
ga.setAllUnvisited();

while(i<ga.size()){
	if(n.get(i).isVisited()){
		i = i + 1;
	}else{
		tmp = ga.dfs(n.get(i));
		stmp = tmp.size();
		while(stmp > 0) {
			res.add(tmp.get(stmp-1));
			stmp = stmp - 1;
		}
		i = i + 1;
	}
}

while(i > 0) {
	print(res.get(i-1+ga.size()));
	i=i-1;
}